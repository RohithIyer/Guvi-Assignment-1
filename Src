####################################
#  Python Login Validation System  #
#        By RohithBubbly             #
####################################



totalUsers = []


# This class is what is created on invoking the createUser() function
class User:


    def __init__(self, name, lastname, email, password):
        self.name = name
        self.lastname = lastname
        self.email = email
        self.password = password
        totalUsers.append(self)

    # Returns all info about a given user 
    def getInfo(self):
        print(self.name)
        print(self.lastname)
        print(self.email)
        print(self.password)

    # Returns the Name of a User
    def getName(self):
        return self.name

    # Returns the Lastname of a User
    def getLastname(self):
        return self.lastname

    # Returns the Email of a User
    def getEmail(self):
        return self.email

    # Returns the Password of a Certain User
    def getPassword(self):
        return self.password


def createUser(name, lastname, email, password):
    return User(name, lastname, email, password)


def inputUser(nameEntry, lastnameEntry, emailEntry, passwordEntry):
    name = str(input(nameEntry + " : "))
    lastname = str(input(lastnameEntry + " : "))
    email = str(input(emailEntry + " : "))
    password = str(input(passwordEntry + " : "))
    if validateInputs(name, lastname, email, password):
        return createUser(name, lastname, email, password)
    else:
        return False


def validateUser(user, password):
    if user.password == password:
        return True
    else:
        return False

#Lists all Users inside the totalUsers array without displaying passwords
def listUsers():
    safeUsers = []
    for user in totalUsers:
        safeUsers.append({user.name, user.lastname, user.email})
    return safeUsers

# Lists all Users in the totalUsers array while displaying passwords
def unsafeList():
    print("This function should only be used by Admins!")
    print("Make sure there are no other onlookers to this screen or it's output")
    print("Confirmation is required before displaying this information")
    conf = str(input("Are you sure you would like to display this information? (y/n)"))
    if conf == "y":
        for user in totalUsers:
            print(user.name)
            print(user.lastname)
            print(user.email)
            print(user.password)
            return True
    else:
        return False

# Checks all the Users to see if a password and email match is found
# This will return True if a match is found, and False if not
def userExists(email, password):
    for user in totalUsers:
        if user.email == email and user.password == password:
            return True
        else:
            return False

# Removes a user based on their email as a primary key
# Uses a list comprehension to reassign the totalUsers array with a filter for the email
def removeUser(email):
    count = 0
    indexStore = []
    while count < len(totalUsers):
        if(totalUsers[count].email == email):
            indexStore.append(count)
        count += 1
    for index in indexStore:
        del(totalUsers[index])
    return True
